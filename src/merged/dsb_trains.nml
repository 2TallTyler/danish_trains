/* *** Begin Header *** */

grf {
	grfid: "TT14";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESC);
	version: 7;
	min_compatible_version: 0;

	url: string(STR_WEBSITE);
	
	param 0 {
		param_company_colours {
			name: string(STR_PARAM_NAME_CCOLOUR);
			desc: string(STR_PARAM_DESC_CCOLOUR);
			min_value: 0;
			max_value: 1;
			def_value: 0;
			names: {
				0: string(PARAM_CCOLOUR_REALISTIC);
				1: string(PARAM_CCOLOUR_CC);
			};
		}
	}
}

railtypetable {
	RAIL, ELRL
}

cargotable {
	PASS
}

/*
Base costs are tweaked to balance vehicle purchase and running costs using a strategy developed by Andythenorth in his excellent Iron Horse 2 train set. 
This requires changing base costs to give greater range and control, and allow me to borrow values directly from the Iron Horse code reference. Thanks, Andy! :)

Note that all engines use RUNNING_COST_STEAM and all wagons use RUNNING_COST_DIESEL. 
Unlike other base cost overrides, changing vehicle base costs only affects vehicles within that NewGRF, so other vehicle sets will not be affected.
*/

basecost {
	PR_BUILD_VEHICLE_TRAIN: -2;
	PR_BUILD_VEHICLE_WAGON: 1;
	PR_RUNNING_TRAIN_STEAM: -2;
	PR_RUNNING_TRAIN_DIESEL: -4;
}

/* *** End Header *** */


/* Begin Sprite Templates */

/* Fix depot view */
traininfo_y_offset = 2;
train_width_32_px = 1;

/* Recolour switches for realistic or company colours */

/* DSB */
switch (FEAT_TRAINS, SELF, sw_cc_red, param_company_colours) {
	0: return palette_2cc(COLOUR_RED, COLOUR_DARK_BLUE);
	1: return base_sprite_2cc + CB_RESULT_COLOUR_MAPPING_ADD_CC;
}

/* SJ */
switch (FEAT_TRAINS, SELF, sw_cc_blue_white, param_company_colours) {
	0: return palette_2cc(COLOUR_BLUE, COLOUR_WHITE);
	1: return base_sprite_2cc + CB_RESULT_COLOUR_MAPPING_ADD_CC;
}

template template_8_standard(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x,		y,		8,		28,		-3,			-14]
    [ x+16,		y,		22,		23,		-15,		-13]
    [ x+46,		y,		32,		14,		-16,		-10]
    [ x+86,		y,		22,		23,		-5,			-13]
    [ x+116,	y,		8,		28,		-3,			-14]
    [ x+132,	y,		22,		23,		-15,		-13]
    [ x+162,	y,		32,		14,		-16,		-10]
    [ x+202,	y,		22,		23,		-5,			-13]
}

template template_8_reversed(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
	//							more negative to shift left
	//											more negative to shift up
    [ x+116,	y,		8,		28,		-3,			-14]
    [ x+132,	y,		22,		23,		-15,		-13]
    [ x+162,	y,		32,		14,		-16,		-10]
    [ x+202,	y,		22,		23,		-5,			-13]
	[ x,		y,		8,		28,		-3,			-14]
    [ x+16,		y,		22,		23,		-15,		-13]
    [ x+46,		y,		32,		14,		-16,		-10]
    [ x+86,		y,		22,		23,		-5,			-13]
}

/* End Sprite Templates */


/* Begin Functions */

switch (FEAT_TRAINS, SELF, func_running_costs, cost, current_speed) {
	0: return cost / 10; // Stopped
	1..15: return cost / 4; // Moving below ~33.5 mph
	return cost; // Track speed
}

/* End Functions */


/* Begin MF */

/*
*	Note: Class MF consist is er20xx-FF-er21xx.
*/

/* GRAPHICS */

/* Lights */
spriteset(spriteset_er_headlights, "src\gfx\er_headlights.png") {template_8_standard(0,0)}
spriteset(spriteset_er_marker_lights, "src\gfx\er_marker_lights.png") {template_8_standard(0,0)}

/* White and red */
spriteset(spriteset_er_1_er20xx, "src\gfx\er_1_er20xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_1_er20xx_reversed, "src\gfx\er_1_er20xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_1_fr22xx, "src\gfx\er_1_fr22xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_1_fr22xx_reversed, "src\gfx\er_1_fr22xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_1_fr23xx, "src\gfx\er_1_fr23xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_1_fr23xx_reversed, "src\gfx\er_1_fr23xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_1_er21xx, "src\gfx\er_1_er21xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_1_er21xx_reversed, "src\gfx\er_1_er21xx_8bpp.png") {template_8_reversed(0,0)}

/* Grey and blue */
spriteset(spriteset_er_2_er20xx, "src\gfx\er_2_er20xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_2_er20xx_reversed, "src\gfx\er_2_er20xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_2_fr22xx, "src\gfx\er_2_fr22xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_2_fr22xx_reversed, "src\gfx\er_2_fr22xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_2_fr23xx, "src\gfx\er_2_fr23xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_2_fr23xx_reversed, "src\gfx\er_2_fr23xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_2_er21xx, "src\gfx\er_2_er21xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_2_er21xx_reversed, "src\gfx\er_2_er21xx_8bpp.png") {template_8_reversed(0,0)}

/* Red and black */
spriteset(spriteset_er_3_er20xx, "src\gfx\er_3_er20xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_3_er20xx_reversed, "src\gfx\er_3_er20xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_3_fr22xx, "src\gfx\er_3_fr22xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_3_fr22xx_reversed, "src\gfx\er_3_fr22xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_3_fr23xx, "src\gfx\er_3_fr23xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_3_fr23xx_reversed, "src\gfx\er_3_fr23xx_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_er_3_er21xx, "src\gfx\er_3_er21xx_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_er_3_er21xx_reversed, "src\gfx\er_3_er21xx_8bpp.png") {template_8_reversed(0,0)}

/* SWITCHES */

/* Livery selection for er20xx */
switch (FEAT_TRAINS, SELF, sw_er_livery_er20xx, cargo_subtype) {
	0: spriteset_er_1_er20xx;
	1: spriteset_er_2_er20xx;
	2: spriteset_er_3_er20xx;
}

switch (FEAT_TRAINS, SELF, sw_er_livery_er20xx_reversed, cargo_subtype) {
	0: spriteset_er_1_er20xx_reversed;
	1: spriteset_er_2_er20xx_reversed;
	2: spriteset_er_3_er20xx_reversed;
}

/* Livery selection for fr22xx */
switch (FEAT_TRAINS, SELF, sw_er_livery_fr22xx, cargo_subtype) {
	0: spriteset_er_1_fr22xx;
	1: spriteset_er_2_fr22xx;
	2: spriteset_er_3_fr22xx;
}

switch (FEAT_TRAINS, SELF, sw_er_livery_fr22xx_reversed, cargo_subtype) {
	0: spriteset_er_1_fr22xx_reversed;
	1: spriteset_er_2_fr22xx_reversed;
	2: spriteset_er_3_fr22xx_reversed;
}

/* Livery selection for fr23xx */
switch (FEAT_TRAINS, SELF, sw_er_livery_fr23xx, cargo_subtype) {
	0: spriteset_er_1_fr23xx;
	1: spriteset_er_2_fr23xx;
	2: spriteset_er_3_fr23xx;
}

switch (FEAT_TRAINS, SELF, sw_er_livery_fr23xx_reversed, cargo_subtype) {
	0: spriteset_er_1_fr23xx_reversed;
	1: spriteset_er_2_fr23xx_reversed;
	2: spriteset_er_3_fr23xx_reversed;
}

/* Livery selection for er21xx */
switch (FEAT_TRAINS, SELF, sw_er_livery_er21xx, cargo_subtype) {
	0: spriteset_er_1_er21xx;
	1: spriteset_er_2_er21xx;
	2: spriteset_er_3_er21xx;
}

switch (FEAT_TRAINS, SELF, sw_er_livery_er21xx_reversed, cargo_subtype) {
	0: spriteset_er_1_er21xx_reversed;
	1: spriteset_er_2_er21xx_reversed;
	2: spriteset_er_3_er21xx_reversed;
}

/* First car of vehicle is an er20xx. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_er_er20xx_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_er_livery_er20xx;    // Return the base sprite
    1: return spriteset_er_headlights;    // Return the overlay
}

/* First car of vehicle is an er20xx. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_er_er20xx_position, position_in_consist) {
	0: return sw_er_er20xx_with_headlights;
	return sw_er_livery_er20xx;
}

/* Sprite stack for er20xx with marker lights */
switch (FEAT_TRAINS, SELF, sw_er_er20xx_with_marker_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_er_livery_er20xx_reversed;    // Return the base sprite
    1: return spriteset_er_marker_lights;    // Return the overlay
}

/* Last car of vehicle is an er20xx. If it is the last car of the train, display marker lights.  */
switch (FEAT_TRAINS, SELF, sw_er_er20xx_reversed_position, position_in_consist_from_end) {
	0: return sw_er_er20xx_with_marker_lights;
	return sw_er_livery_er20xx_reversed;
}

/* Sprite stack for er21xx with headlights */
switch (FEAT_TRAINS, SELF, sw_er_er21xx_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_er_livery_er21xx_reversed;    // Return the base sprite
    1: return spriteset_er_headlights;    // Return the overlay
}

/* First car of vehicle is an er21xx. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_er_er21xx_reversed_position, position_in_consist) {
	0: return sw_er_er21xx_with_headlights;
	return sw_er_livery_er21xx_reversed;
}

/* Sprite stack for er21xx with marker lights */
switch (FEAT_TRAINS, SELF, sw_er_er21xx_with_marker_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_er_livery_er21xx;    // Return the base sprite
    1: return spriteset_er_marker_lights;    // Return the overlay
}

/* Last car of vehicle is an er21xx. If it is the last car of the train, display marker lights.  */
switch (FEAT_TRAINS, SELF, sw_er_er21xx_position, position_in_consist_from_end) {
	0: return sw_er_er21xx_with_marker_lights;
	return sw_er_livery_er21xx;
}

/* Car 0 check reversed */
switch (FEAT_TRAINS, PARENT, sw_er_reverser_0, vehicle_is_reversed) {
	0: sw_er_er20xx_position;
	sw_er_er21xx_reversed_position;
}

/* Car 1 check reversed */
switch (FEAT_TRAINS, PARENT, sw_er_reverser_1, vehicle_is_reversed) {
	0: sw_er_livery_fr22xx; // This car has no headlights/marker lights, so we can go directly to the spriteset.
	sw_er_livery_fr23xx_reversed;
}

/* Car 2 check reversed */
switch (FEAT_TRAINS, PARENT, sw_er_reverser_2, vehicle_is_reversed) {
	0: sw_er_livery_fr23xx; // This car has no headlights/marker lights, so we can go directly to the spriteset.
	sw_er_livery_fr22xx_reversed;
}

/* Car 3 check reversed */
switch (FEAT_TRAINS, PARENT, sw_er_reverser_3, vehicle_is_reversed) {
	0: sw_er_er21xx_position;
	sw_er_er20xx_reversed_position;
}

/* Select the correct part of the train */
switch (FEAT_TRAINS, SELF, sw_er_graphics, position_in_articulated_veh) {
	0: sw_er_reverser_0; // Car 0 (first)
	1: sw_er_reverser_1; // Car 1
	2: sw_er_reverser_2; // Car 2
	3: sw_er_reverser_3; // Car 3 (last)
}

/* Assemble a 4-car articulated vehicle. */
switch (FEAT_TRAINS, SELF, sw_er_articulated_part, extra_callback_info1) {
	1 .. 3: return item_er;
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

/* Create livery refits with cargo_subtypes */
switch (FEAT_TRAINS, SELF, sw_er_cargo_subtype_text, cargo_subtype) {
	0: return string(STR_LIVERY_WHITE_RED);
	1: return string(STR_LIVERY_GREY_BLUE);
	2: return string(STR_LIVERY_RED_BLACK);
}

/* ITEM*/

item(FEAT_TRAINS, item_er, 2) {
	property {
		/* Common properties */
		name: string(STR_NAME_ER);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1993,01,01);
		model_life:	40;
		vehicle_life: 40;
		reliability_decay: 20;
		refittable_cargo_classes: bitmask(CC_PASSENGERS);
		default_cargo_type: PASS;
		cargo_capacity: 52;
		loading_speed: 6;
		/* Train-specific properties */
		sprite_id: SPRITE_ID_NEW_TRAIN; //enable new graphics
		speed: 180 km/h;
		misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);
		refit_cost: 0;
		track_type:	ELRL;
		ai_special_flag: AI_FLAG_PASSENGER;
		running_cost_base: RUNNING_COST_STEAM;
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1680 kW;
		weight: 133 ton;
		tractive_effort_coefficient: 0.3;
		length: 8;
	}
	graphics {
		default: sw_er_graphics;
		purchase: spriteset_er_1_er20xx;
		colour_mapping: sw_cc_red;
		articulated_part: sw_er_articulated_part;
		cargo_capacity: 52;
		purchase_cargo_capacity: 52;
		cargo_subtype_text: sw_er_cargo_subtype_text;
		cost_factor: 120;
		running_cost_factor: func_running_costs(2156);
		purchase_running_cost_factor: 2156;
		visual_effect_and_powered: (position_in_articulated_veh == 0) ? visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 0, ENABLE_WAGON_POWER) : visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
		additional_text: string(STR_ROLE_PASS);
	}
}

/* End MF */


/* Begin MF */

/*
*	Note: Class MF consist is ma-FF-am.
*/

/* GRAPHICS */

/* Lights */
spriteset(spriteset_ma_ma_headlights, "src\gfx\ma_ma_headlights.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_ma_marker_lights, "src\gfx\ma_ma_marker_lights.png") {template_8_reversed(0,0)}
spriteset(spriteset_ma_bs_headlights, "src\gfx\ma_bs_headlights.png") {template_8_reversed(0,0)}
spriteset(spriteset_ma_bs_marker_lights, "src\gfx\ma_bs_marker_lights.png") {template_8_standard(0,0)}

/* White and red */
spriteset(spriteset_ma_1_ma, "src\gfx\ma_1_ma_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_1_ma_reversed, "src\gfx\ma_1_ma_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_ma_1_br, "src\gfx\ma_1_br_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_1_br_reversed, "src\gfx\ma_1_br_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_ma_1_am, "src\gfx\ma_1_am_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_1_am_reversed, "src\gfx\ma_1_am_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_ma_1_bs, "src\gfx\ma_1_bs_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_1_bs_reversed, "src\gfx\ma_1_bs_8bpp.png") {template_8_reversed(0,0)}

/* Grey and red */
spriteset(spriteset_ma_2_ma, "src\gfx\ma_2_ma_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_2_ma_reversed, "src\gfx\ma_2_ma_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_ma_2_br, "src\gfx\ma_2_br_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_2_br_reversed, "src\gfx\ma_2_br_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_ma_2_am, "src\gfx\ma_2_am_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_2_am_reversed, "src\gfx\ma_2_am_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_ma_2_bs, "src\gfx\ma_2_bs_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_ma_2_bs_reversed, "src\gfx\ma_2_bs_8bpp.png") {template_8_reversed(0,0)}

/* SWITCHES */

/* Livery selection for ma */
switch (FEAT_TRAINS, SELF, sw_ma_livery_ma, cargo_subtype) {
	0: spriteset_ma_1_ma;
	1: spriteset_ma_2_ma;
}

switch (FEAT_TRAINS, SELF, sw_ma_livery_ma_reversed, cargo_subtype) {
	0: spriteset_ma_1_ma_reversed;
	1: spriteset_ma_2_ma_reversed;
}

/* Livery selection for br */
switch (FEAT_TRAINS, SELF, sw_ma_livery_br, cargo_subtype) {
	0: spriteset_ma_1_br;
	1: spriteset_ma_2_br;
}

switch (FEAT_TRAINS, SELF, sw_ma_livery_br_reversed, cargo_subtype) {
	0: spriteset_ma_1_br_reversed;
	1: spriteset_ma_2_br_reversed;
}

/* Livery selection for bs */
switch (FEAT_TRAINS, SELF, sw_ma_livery_am, cargo_subtype) {
	0: spriteset_ma_1_am;
	1: spriteset_ma_2_am;
}

switch (FEAT_TRAINS, SELF, sw_ma_livery_am_reversed, cargo_subtype) {
	0: spriteset_ma_1_am_reversed;
	1: spriteset_ma_2_am_reversed;
}

/* Livery selection for am */
switch (FEAT_TRAINS, SELF, sw_ma_livery_bs, cargo_subtype) {
	0: spriteset_ma_1_bs;
	1: spriteset_ma_2_bs;
}

switch (FEAT_TRAINS, SELF, sw_ma_livery_bs_reversed, cargo_subtype) {
	0: spriteset_ma_1_bs_reversed;
	1: spriteset_ma_2_bs_reversed;
}

/* First car of vehicle is an ma. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_ma_ma_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_ma_livery_ma;    // Return the base sprite
    1: return spriteset_ma_ma_headlights;    // Return the overlay
}

/* First car of vehicle is an ma. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_ma_ma_position, position_in_consist) {
	0: return sw_ma_ma_with_headlights;
	return sw_ma_livery_ma;
}

/* Sprite stack for ma with marker lights */
switch (FEAT_TRAINS, SELF, sw_ma_ma_with_marker_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_ma_livery_ma_reversed;    // Return the base sprite
    1: return spriteset_ma_ma_marker_lights;    // Return the overlay
}

/* Last car of vehicle is an ma. If it is the last car of the train, display marker lights.  */
switch (FEAT_TRAINS, SELF, sw_ma_ma_reversed_position, position_in_consist_from_end) {
	0: return sw_ma_ma_with_marker_lights;
	return sw_ma_livery_ma_reversed;
}

/* Sprite stack for am with headlights */
switch (FEAT_TRAINS, SELF, sw_ma_bs_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_ma_livery_bs_reversed;    // Return the base sprite
    1: return spriteset_ma_bs_headlights;    // Return the overlay
}

/* First car of vehicle is an am. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_ma_bs_reversed_position, position_in_consist) {
	0: return sw_ma_bs_with_headlights;
	return sw_ma_livery_bs_reversed;
}

/* Sprite stack for am with marker lights */
switch (FEAT_TRAINS, SELF, sw_ma_bs_with_marker_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_ma_livery_bs;    // Return the base sprite
    1: return spriteset_ma_bs_marker_lights;    // Return the overlay
}

/* Last car of vehicle is an am. If it is the last car of the train, display marker lights.  */
switch (FEAT_TRAINS, SELF, sw_ma_bs_position, position_in_consist_from_end) {
	0: return sw_ma_bs_with_marker_lights;
	return sw_ma_livery_bs;
}

/* Trainset A - 4 cars */

/* Car 0a check reversed */
switch (FEAT_TRAINS, PARENT, sw_ma_reverser_0a, vehicle_is_reversed) {
	0: sw_ma_ma_position;
	sw_ma_bs_reversed_position;
}

/* Car 1a check reversed */
switch (FEAT_TRAINS, PARENT, sw_ma_reverser_1a, vehicle_is_reversed) {
	0: sw_ma_livery_am; // This car has no headlights/marker lights, so we can go directly to the spriteset.
	sw_ma_livery_br_reversed;
}

/* Car 2a check reversed */
switch (FEAT_TRAINS, PARENT, sw_ma_reverser_2a, vehicle_is_reversed) {
	0: sw_ma_livery_br; // This car has no headlights/marker lights, so we can go directly to the spriteset.
	sw_ma_livery_am_reversed;
}

/* Car 3a check reversed */
switch (FEAT_TRAINS, PARENT, sw_ma_reverser_3a, vehicle_is_reversed) {
	0: sw_ma_bs_position;
	sw_ma_ma_reversed_position;
}

/* Trainset B - 8 cars */

/* Car 1b check reversed */
switch (FEAT_TRAINS, PARENT, sw_ma_reverser_1b, vehicle_is_reversed) {
	0: sw_ma_livery_am;
	sw_ma_livery_am_reversed;
}

/* Car 2b check reversed */
switch (FEAT_TRAINS, PARENT, sw_ma_reverser_2b, vehicle_is_reversed) {
	0: sw_ma_livery_br;
	sw_ma_livery_br_reversed;
}

/* Select the correct part of a 4-car train */
switch (FEAT_TRAINS, SELF, sw_ma_graphics_4, position_in_articulated_veh) {
	0: sw_ma_reverser_0a; // Car 0 (first)
	1: sw_ma_reverser_1a; // Car 1
	2: sw_ma_reverser_2a; // Car 2
	3: sw_ma_reverser_3a; // Car 3 (last)
}

/* Select the correct part of an 8-car train */
switch (FEAT_TRAINS, SELF, sw_ma_graphics_8, position_in_vehid_chain % 8) {
	0: sw_ma_ma_position;
	1: sw_ma_reverser_1b;
	2: sw_ma_reverser_2b;
	3: sw_ma_bs_position;
	4: sw_ma_bs_reversed_position; // 2nd trainset cab car
	5: sw_ma_reverser_2b;
	6: sw_ma_reverser_1b;
	7: sw_ma_ma_reversed_position; // Rear loco
}

/* Choose a 4-car or 8-car train */
switch (FEAT_TRAINS, SELF, sw_ma_graphics, num_vehs_in_vehid_chain) {
	4: sw_ma_graphics_4;
	sw_ma_graphics_8;
}

/* Assemble a 4-car articulated vehicle. */
switch (FEAT_TRAINS, SELF, sw_ma_articulated_part, extra_callback_info1) {
	1 .. 3: return item_ma;
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

/* Create livery refits with cargo_subtypes */
switch (FEAT_TRAINS, SELF, sw_ma_cargo_subtype_text, cargo_subtype) {
	0: return string(STR_LIVERY_WHITE_RED);
	1: return string(STR_LIVERY_GREY_RED);
}

switch (FEAT_TRAINS, SELF, sw_ma_visual_effect_and_powered_2, 
	(((position_in_vehid_chain == 0) || (position_in_vehid_chain == 7)) && (LOAD_TEMP(1) == 0)) || 
	(((position_in_vehid_chain_from_end == 0) || (position_in_vehid_chain_from_end == 7)) && LOAD_TEMP(1)) ) {
		1: return visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 0, ENABLE_WAGON_POWER);
		return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}

switch (FEAT_TRAINS, PARENT, sw_ma_visual_effect_and_powered_1, STORE_TEMP(vehicle_is_reversed, 1)) {sw_ma_visual_effect_and_powered_2;}

/* ITEM*/

item(FEAT_TRAINS, item_ma, 2) {
	property {
		/* Common properties */
		name: string(STR_NAME_MA);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1963,01,01);
		model_life:	40;
		vehicle_life: 40;
		reliability_decay: 20;
		refittable_cargo_classes: bitmask(CC_PASSENGERS);
		default_cargo_type: PASS;
		cargo_capacity: 31;
		loading_speed: 6;
		/* Train-specific properties */
		sprite_id: SPRITE_ID_NEW_TRAIN; //enable new graphics
		speed: 160 km/h;
		misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);
		refit_cost: 0;
		track_type: RAIL;
		ai_special_flag: AI_FLAG_PASSENGER;
		running_cost_base: RUNNING_COST_STEAM;
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1100 hp;
		weight: 135 ton;
		tractive_effort_coefficient: 0.3;
		length: 8;
	}
	graphics {
		default: sw_ma_graphics;
		purchase: spriteset_ma_1_ma;
		colour_mapping: sw_cc_red;
		articulated_part: sw_ma_articulated_part;
		cargo_capacity: 31;
		purchase_cargo_capacity: 31;
		cargo_subtype_text: sw_ma_cargo_subtype_text;
		cost_factor: 80;
		running_cost_factor: func_running_costs(1900);
		purchase_running_cost_factor: 1900;
		visual_effect_and_powered: sw_ma_visual_effect_and_powered_1;
		additional_text: string(STR_ROLE_PASS);
	}
}

/* End MF */


/* Begin MF */

/*
*	Note: Class MF consist is MFA-FF-MFB.
*/

/* GRAPHICS */

/* Lights */
spriteset(spriteset_mf_headlights, "src\gfx\mf_headlights.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_marker_lights, "src\gfx\mf_marker_lights.png") {template_8_standard(0,0)}

/* White and red */
spriteset(spriteset_mf_1_mfa, "src\gfx\mf_1_mfa_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_1_mfa_reversed, "src\gfx\mf_1_mfa_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_mf_1_ff, "src\gfx\mf_1_ff_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_1_ff_reversed, "src\gfx\mf_1_ff_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_mf_1_mfb, "src\gfx\mf_1_mfb_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_1_mfb_reversed, "src\gfx\mf_1_mfb_8bpp.png") {template_8_reversed(0,0)}

/* Grey and blue */
spriteset(spriteset_mf_2_mfa, "src\gfx\mf_2_mfa_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_2_mfa_reversed, "src\gfx\mf_2_mfa_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_mf_2_ff, "src\gfx\mf_2_ff_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_2_ff_reversed, "src\gfx\mf_2_ff_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_mf_2_mfb, "src\gfx\mf_2_mfb_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_2_mfb_reversed, "src\gfx\mf_2_mfb_8bpp.png") {template_8_reversed(0,0)}

/* Red and black */
spriteset(spriteset_mf_3_mfa, "src\gfx\mf_3_mfa_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_3_mfa_reversed, "src\gfx\mf_3_mfa_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_mf_3_ff, "src\gfx\mf_3_ff_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_3_ff_reversed, "src\gfx\mf_3_ff_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_mf_3_mfb, "src\gfx\mf_3_mfb_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_mf_3_mfb_reversed, "src\gfx\mf_3_mfb_8bpp.png") {template_8_reversed(0,0)}

/* SWITCHES */

/* Livery selection for MFA */
switch (FEAT_TRAINS, SELF, sw_mf_livery_mfa, cargo_subtype) {
	0: spriteset_mf_1_mfa;
	1: spriteset_mf_2_mfa;
	2: spriteset_mf_3_mfa;
}

switch (FEAT_TRAINS, SELF, sw_mf_livery_mfa_reversed, cargo_subtype) {
	0: spriteset_mf_1_mfa_reversed;
	1: spriteset_mf_2_mfa_reversed;
	2: spriteset_mf_3_mfa_reversed;
}

/* Livery selection for FF */
switch (FEAT_TRAINS, SELF, sw_mf_livery_ff, cargo_subtype) {
	0: spriteset_mf_1_ff;
	1: spriteset_mf_2_ff;
	2: spriteset_mf_3_ff;
}

switch (FEAT_TRAINS, SELF, sw_mf_livery_ff_reversed, cargo_subtype) {
	0: spriteset_mf_1_ff_reversed;
	1: spriteset_mf_2_ff_reversed;
	2: spriteset_mf_3_ff_reversed;
}

/* Livery selection for MFB */
switch (FEAT_TRAINS, SELF, sw_mf_livery_mfb, cargo_subtype) {
	0: spriteset_mf_1_mfb;
	1: spriteset_mf_2_mfb;
	2: spriteset_mf_3_mfb;
}

switch (FEAT_TRAINS, SELF, sw_mf_livery_mfb_reversed, cargo_subtype) {
	0: spriteset_mf_1_mfb_reversed;
	1: spriteset_mf_2_mfb_reversed;
	2: spriteset_mf_3_mfb_reversed;
}

/* First car of vehicle is an MFA. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_mf_mfa_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_mf_livery_mfa;    // Return the base sprite
    1: return spriteset_mf_headlights;    // Return the overlay
}

/* First car of vehicle is an MFA. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_mf_mfa_position, position_in_consist) {
	0: return sw_mf_mfa_with_headlights;
	return sw_mf_livery_mfa;
}

/* Sprite stack for MFA with marker lights */
switch (FEAT_TRAINS, SELF, sw_mf_mfa_with_marker_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_mf_livery_mfa_reversed;    // Return the base sprite
    1: return spriteset_mf_marker_lights;    // Return the overlay
}

/* Last car of vehicle is an MFA. If it is the last car of the train, display marker lights.  */
switch (FEAT_TRAINS, SELF, sw_mf_mfa_reversed_position, position_in_consist_from_end) {
	0: return sw_mf_mfa_with_marker_lights;
	return sw_mf_livery_mfa_reversed;
}

/* Sprite stack for MFB with headlights */
switch (FEAT_TRAINS, SELF, sw_mf_mfb_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_mf_livery_mfb_reversed;    // Return the base sprite
    1: return spriteset_mf_headlights;    // Return the overlay
}

/* First car of vehicle is an MFB. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_mf_mfb_reversed_position, position_in_consist) {
	0: return sw_mf_mfb_with_headlights;
	return sw_mf_livery_mfb_reversed;
}

/* Sprite stack for MFB with marker lights */
switch (FEAT_TRAINS, SELF, sw_mf_mfb_with_marker_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_mf_livery_mfb;    // Return the base sprite
    1: return spriteset_mf_marker_lights;    // Return the overlay
}

/* Last car of vehicle is an MFB. If it is the last car of the train, display marker lights.  */
switch (FEAT_TRAINS, SELF, sw_mf_mfb_position, position_in_consist_from_end) {
	0: return sw_mf_mfb_with_marker_lights;
	return sw_mf_livery_mfb;
}

/* Car 0 check reversed */
switch (FEAT_TRAINS, PARENT, sw_mf_reverser_0, vehicle_is_reversed) {
	0: sw_mf_mfa_position;
	sw_mf_mfb_reversed_position;
}

/* Car 1 check reversed */
switch (FEAT_TRAINS, PARENT, sw_mf_reverser_1, vehicle_is_reversed) {
	0: sw_mf_livery_ff; // This car has no headlights/marker lights, so we can go directly to the spriteset.
	sw_mf_livery_ff_reversed; // This car is symmetrical, but un-reverse the sprite to hide any rendering inconsistencies.
}

/* Car 2 check reversed */
switch (FEAT_TRAINS, PARENT, sw_mf_reverser_2, vehicle_is_reversed) {
	0: sw_mf_mfb_position;
	sw_mf_mfa_reversed_position;
}

/* Select the correct part of the train */
switch (FEAT_TRAINS, SELF, sw_mf_graphics, position_in_articulated_veh) {
	0: sw_mf_reverser_0; // Car 0 (first)
	1: sw_mf_reverser_1; // Car 1 (middle)
	2: sw_mf_reverser_2; // Car 2 (last)
}

/* Assemble a 3-car articulated vehicle. */
switch (FEAT_TRAINS, SELF, sw_mf_articulated_part, extra_callback_info1) {
	1 .. 2: return item_mf;
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

/* Create livery refits with cargo_subtypes */
switch (FEAT_TRAINS, SELF, sw_mf_cargo_subtype_text, cargo_subtype) {
	0: return string(STR_LIVERY_WHITE_RED);
	1: return string(STR_LIVERY_GREY_BLUE);
	2: return string(STR_LIVERY_RED_BLACK);
}

/* ITEM*/

item(FEAT_TRAINS, item_mf, 1) {
	property {
		/* Common properties */
		name: string(STR_NAME_MF);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1989,01,01);
		model_life:	40;
		vehicle_life: 40;
		reliability_decay: 20;
		refittable_cargo_classes: bitmask(CC_PASSENGERS);
		default_cargo_type: PASS;
		cargo_capacity: 50;
		loading_speed: 6;
		/* Train-specific properties */
		sprite_id: SPRITE_ID_NEW_TRAIN; //enable new graphics
		speed: 180 km/h;
		misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);
		refit_cost: 0;
		track_type:	RAIL;
		ai_special_flag: AI_FLAG_PASSENGER;
		running_cost_base: RUNNING_COST_STEAM;
		engine_class: ENGINE_CLASS_DIESEL;
		power: 1600 hp;
		weight: 97 ton;
		tractive_effort_coefficient: 0.3;
		length: 8;
	}
	graphics {
		default: sw_mf_graphics;
		purchase: spriteset_mf_1_mfa;
		colour_mapping: sw_cc_red;
		articulated_part: sw_mf_articulated_part;
		cargo_capacity: return (position_in_articulated_veh == 1) ? 64 : 37;
		purchase_cargo_capacity: 140 / 3;
		cargo_subtype_text: sw_mf_cargo_subtype_text;
		cost_factor: 90;
		running_cost_factor: func_running_costs(1800);
		purchase_running_cost_factor: 1800;
		visual_effect_and_powered: (position_in_articulated_veh == 1) ? visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER) : visual_effect_and_powered(VISUAL_EFFECT_DIESEL, 0, ENABLE_WAGON_POWER);
		additional_text: string(STR_ROLE_PASS);
	}
}

/* End MF */


/* Begin MZ (IV) */

/* Real livery sprites */
spriteset(spriteset_mz_iv, "src\gfx\mz_iv_8bpp.png") {template_8_standard(0,0)}

item(FEAT_TRAINS, item_mz_iv, 0) {
	property {
		/* Common properties */
		name: string(STR_NAME_MZ_IV);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1977,01,01);
		model_life:	40; // retired in 2008
		vehicle_life: 40;
		reliability_decay: 20;
		/* Train-specific properties */
		sprite_id: SPRITE_ID_NEW_TRAIN; //enable new graphics
		speed: 103 mph;
		track_type:	RAIL;
		running_cost_base: RUNNING_COST_STEAM;
		engine_class: ENGINE_CLASS_DIESEL;
		power: 3845 hp;
		weight: 123 ton;
		tractive_effort_coefficient: 0.3;
		length: 8;
	}
	graphics {
		default: spriteset_mz_iv;
		colour_mapping: sw_cc_red;
		cost_factor: 139;
		running_cost_factor: func_running_costs(5318);
		purchase_running_cost_factor: 5318;
		additional_text: string(STR_ROLE_PASS_FREIGHT);
	}
}

/* End MZ (IV) */


/* Begin X2000*/

/* SPRITES */

/* Lights */
spriteset(spriteset_x2000_loco_headlights, "src\gfx\x2000_loco_headlights.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_loco_marker_lights, "src\gfx\x2000_loco_marker_lights.png") {template_8_reversed(0,0)}
spriteset(spriteset_x2000_cab_headlights, "src\gfx\x2000_cab_headlights.png") {template_8_reversed(0,0)}
spriteset(spriteset_x2000_cab_marker_lights, "src\gfx\x2000_cab_marker_lights.png") {template_8_standard(0,0)}

/* Black, blue, and white */
spriteset(spriteset_x2000_1_loco, "src/gfx/x2000_1_loco_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_1_loco_reversed, "src/gfx/x2000_1_loco_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_x2000_1_coach, "src/gfx/x2000_1_coach_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_1_coach_reversed, "src/gfx/x2000_1_coach_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_x2000_1_cafe, "src/gfx/x2000_1_cafe_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_1_cafe_reversed, "src/gfx/x2000_1_cafe_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_x2000_1_cab, "src/gfx/x2000_1_cab_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_1_cab_reversed, "src/gfx/x2000_1_cab_8bpp.png") {template_8_reversed(0,0)}

/* White and grey */
spriteset(spriteset_x2000_2_loco, "src/gfx/x2000_2_loco_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_2_loco_reversed, "src/gfx/x2000_2_loco_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_x2000_2_coach, "src/gfx/x2000_2_coach_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_2_coach_reversed, "src/gfx/x2000_2_coach_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_x2000_2_cafe, "src/gfx/x2000_2_cafe_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_2_cafe_reversed, "src/gfx/x2000_2_cafe_8bpp.png") {template_8_reversed(0,0)}
spriteset(spriteset_x2000_2_cab, "src/gfx/x2000_2_cab_8bpp.png") {template_8_standard(0,0)}
spriteset(spriteset_x2000_2_cab_reversed, "src/gfx/x2000_2_cab_8bpp.png") {template_8_reversed(0,0)}


/* SWITCHES */

/* Livery switches */
switch (FEAT_TRAINS, SELF, sw_x2000_livery_loco, date_of_last_service < date(2005, 01, 01)) {
	1: return spriteset_x2000_1_loco;
	return spriteset_x2000_2_loco;
}

switch (FEAT_TRAINS, SELF, sw_x2000_livery_loco_reversed, date_of_last_service < date(2005, 01, 01)) {
	1: return spriteset_x2000_1_loco_reversed;
	return spriteset_x2000_2_loco_reversed;
}

switch (FEAT_TRAINS, SELF, sw_x2000_livery_coach, date_of_last_service < date(2005, 01, 01)) {
	1: return spriteset_x2000_1_coach;
	return spriteset_x2000_2_coach;
}

switch (FEAT_TRAINS, SELF, sw_x2000_livery_coach_reversed, date_of_last_service < date(2005, 01, 01)) {
	1: return spriteset_x2000_1_coach_reversed;
	return spriteset_x2000_2_coach_reversed;
}

switch (FEAT_TRAINS, SELF, sw_x2000_livery_cafe, date_of_last_service < date(2005, 01, 01)) {
	1: return spriteset_x2000_1_cafe;
	return spriteset_x2000_2_cafe;
}

switch (FEAT_TRAINS, SELF, sw_x2000_livery_cafe_reversed, date_of_last_service < date(2005, 01, 01)) {
	1: return spriteset_x2000_1_cafe_reversed;
	return spriteset_x2000_2_cafe_reversed;
}

switch (FEAT_TRAINS, SELF, sw_x2000_livery_cab, date_of_last_service < date(2005, 01, 01)) {
	1: return spriteset_x2000_1_cab;
	return spriteset_x2000_2_cab;
}

switch (FEAT_TRAINS, SELF, sw_x2000_livery_cab_reversed, date_of_last_service < date(2005, 01, 01)) {
	1: return spriteset_x2000_1_cab_reversed;
	return spriteset_x2000_2_cab_reversed;
}

/* First car of vehicle is an x2000_loco. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_x2000_loco_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_x2000_livery_loco;    // Return the base sprite
    1: return spriteset_x2000_loco_headlights;    // Return the overlay
}

/* First car of vehicle is an x2000_loco. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_x2000_loco_position, position_in_consist) {
	0: return sw_x2000_loco_with_headlights;
	return sw_x2000_livery_loco;
}

/* Sprite stack for x2000_loco with marker lights */
switch (FEAT_TRAINS, SELF, sw_x2000_loco_with_marker_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_x2000_livery_loco_reversed;    // Return the base sprite
    1: return spriteset_x2000_loco_marker_lights;    // Return the overlay
}

/* Last car of vehicle is an x2000_loco. If it is the last car of the train, display marker lights.  */
switch (FEAT_TRAINS, SELF, sw_x2000_loco_reversed_position, position_in_consist_from_end) {
	0: return sw_x2000_loco_with_marker_lights;
	return sw_x2000_livery_loco_reversed;
}

/* Sprite stack for x2000_cab with headlights */
switch (FEAT_TRAINS, SELF, sw_x2000_cab_with_headlights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_x2000_livery_cab_reversed;    // Return the base sprite
    1: return spriteset_x2000_cab_headlights;    // Return the overlay
}

/* First car of vehicle is an x2000_cab. If it is the first car of the train, display headlights.  */
switch (FEAT_TRAINS, SELF, sw_x2000_cab_reversed_position, position_in_consist) {
	0: return sw_x2000_cab_with_headlights;
	return sw_x2000_livery_cab_reversed;
}

/* Sprite stack for x2000_cab with marker lights */
switch (FEAT_TRAINS, SELF, sw_x2000_cab_with_marker_lights, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: return sw_x2000_livery_cab;    // Return the base sprite
    1: return spriteset_x2000_cab_marker_lights;    // Return the overlay
}

/* Last car of vehicle is an x2000_cab. If it is the last car of the train, display marker lights.  */
switch (FEAT_TRAINS, SELF, sw_x2000_cab_position, position_in_consist_from_end) {
	0: return sw_x2000_cab_with_marker_lights;
	return sw_x2000_livery_cab;
}

/* Car 0 check reversed */
switch (FEAT_TRAINS, PARENT, sw_x2000_reverser_0, vehicle_is_reversed) {
	0: sw_x2000_loco_position;
	sw_x2000_cab_reversed_position;
}

/* Cars 1 and 4 check reversed */
switch (FEAT_TRAINS, PARENT, sw_x2000_reverser_1_4, vehicle_is_reversed) {
	0: sw_x2000_livery_coach;
	sw_x2000_livery_coach_reversed;
}

/* Car 2 check reversed */
switch (FEAT_TRAINS, PARENT, sw_x2000_reverser_2, vehicle_is_reversed) {
	0: sw_x2000_livery_coach;
	sw_x2000_livery_cafe_reversed;
}

/* Car 3 check reversed */
switch (FEAT_TRAINS, PARENT, sw_x2000_reverser_3, vehicle_is_reversed) {
	0: sw_x2000_livery_cafe;
	sw_x2000_livery_coach_reversed;
}

/* Car 5 check reversed */
switch (FEAT_TRAINS, PARENT, sw_x2000_reverser_5, vehicle_is_reversed) {
	0: sw_x2000_cab_position;
	sw_x2000_loco_reversed_position;
}

/* Select the correct part of the train */
switch (FEAT_TRAINS, SELF, sw_x2000_graphics, position_in_articulated_veh) {
	0: sw_x2000_reverser_0; // Car 0 (first)
	1: sw_x2000_reverser_1_4; // Car 1
	2: sw_x2000_reverser_2;
	3: sw_x2000_reverser_3; // Cafe
	4: sw_x2000_reverser_1_4;
	5: sw_x2000_reverser_5;
}

/* Assemble a 4-car articulated vehicle. */
switch (FEAT_TRAINS, SELF, sw_x2000_articulated_part, extra_callback_info1) {
	1 .. 5: return item_x2000;
	return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, sw_x2000_purchase, current_year) {
	0..2004: return spriteset_x2000_1_loco;
	return spriteset_x2000_2_loco;
}

switch (FEAT_TRAINS, SELF, sw_x2000_visual_effect_and_powered, ((position_in_articulated_veh == 0) && (vehicle_is_reversed == 0)) || ((position_in_articulated_veh_from_end == 0) && (vehicle_is_reversed == 1)) ) {
	1: return visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 0, ENABLE_WAGON_POWER);
	return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}
	

item(FEAT_TRAINS, item_x2000, 3) {
	property {
		name: string(STR_NAME_X2000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1990,09,04);
		model_life: 40;
		vehicle_life: 40;
		reliability_decay: 20;
		refittable_cargo_classes: bitmask(CC_PASSENGERS);
		refit_cost: 0;
		default_cargo_type: PASS;
		cargo_capacity: 44;
		loading_speed: 5;
		cargo_age_period: 278; // 1.5 times normal for this expensive long-distance train
		sprite_id: SPRITE_ID_NEW_TRAIN; // required to enable new graphics
		speed: 210 km/h;
		misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_TILT, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		track_type: ELRL;
		ai_special_flag: AI_FLAG_PASSENGER;
		running_cost_base: RUNNING_COST_STEAM;
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 3260 kW;
		weight: 323 tons;
		tractive_effort_coefficient: 0.3;
		length: 8;
	}
	graphics {
		default: sw_x2000_graphics;
		purchase: sw_x2000_purchase;
		articulated_part: sw_x2000_articulated_part;
		colour_mapping: sw_cc_blue_white;
		cost_factor: 257;
		running_cost_factor: func_running_costs(6283);
		purchase_running_cost_factor: 6283;
		visual_effect_and_powered: sw_x2000_visual_effect_and_powered;
		additional_text: string(STR_ROLE_LD_PASS);
	}
}

/* End X2000 */
